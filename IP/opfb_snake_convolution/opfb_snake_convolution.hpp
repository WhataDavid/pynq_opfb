#pragma once
#include <ap_int.h>
#include <hls_stream.h>
#include <stdint.h>
#include <ap_axi_sdata.h>
#include <string.h>  // NOT <cstring>
#include <iostream>


#define M 8
#define D 7
#define Distance (M-D)
//#define TAPS 32
#define length 12
#define N (M*TAPS)
#define TAPS 4
const float coe[N] = { 0.0015822,0.0018904,0.0019496,0.0010675,-0.0015934,-0.0063408,-0.01227,-0.0169631,-0.016855,-0.0082811,0.0110903,0.0409716,0.0778678,0.1155349,0.1464537,0.1638953,0.1638953,0.1464537,0.1155349,0.0778678,0.0409716,0.0110903,-0.0082811,-0.016855,-0.0169631,-0.01227,-0.0063408,-0.0015934,0.0010675,0.0019496,0.0018904,0.0015822};
//#define TAPS 8
//const float coe[DATA_NUM] = { -0.0005710,-0.0002220,0.0002486,0.0007923,0.0012968,0.0015763,0.0014100,0.0006302,-0.0007662,-0.0025299,-0.0041486,-0.0049459,-0.0042883,-0.0018478,0.0021636,0.0068894,0.0109266,0.0126488,0.0106975,0.0045194,-0.0052179,-0.0164869,-0.0261376,-0.0305080,-0.0262953,-0.0114787,0.0139522,0.0476845,0.0853122,0.1210975,0.1491112,0.1644869,0.1644869,0.1491112,0.1210975,0.0853122,0.0476845,0.0139522,-0.0114787,-0.0262953,-0.0305080,-0.0261376,-0.0164869,-0.0052179,0.0045194,0.0106975,0.0126488,0.0109266,0.0068894,0.0021636,-0.0018478,-0.0042883,-0.0049459,-0.0041486,-0.0025299,-0.0007662,0.0006302,0.0014100,0.0015763,0.0012968,0.0007923,0.0002486,-0.0002220,-0.0005710};
//#define TAPS 16
//const float coe[DATA_NUM]={0.0003871,0.0003960,0.0003008,0.0001157,-0.0001231,-0.0003614,-0.0005350,-0.0005835,-0.0004683,-0.0001886,0.0002080,0.0006274,0.0009469,0.0010459,0.0008451,0.0003411,-0.0003757,-0.0011286,-0.0016926,-0.0018552,-0.0014860,-0.0005941,0.0006479,0.0019272,0.0028618,0.0031061,0.0024645,0.0009764,-0.0010555,-0.0031137,-0.0045878,-0.0049437,-0.0038964,-0.0015343,0.0016496,0.0048428,0.0071058,0.0076306,0.0059977,0.0023571,-0.0025314,-0.0074297,-0.0109093,-0.0117354,-0.0092508,-0.0036508,0.0039427,0.0116556,0.0172700,0.0187869,0.0150138,0.0060250,-0.0066400,-0.0201209,-0.0307283,-0.0346977,-0.0290503,-0.0123668,0.0147150,0.0494144,0.0871801,0.1224657,0.1497556,0.1646284,0.1646284,0.1497556,0.1224657,0.0871801,0.0494144,0.0147150,-0.0123668,-0.0290503,-0.0346977,-0.0307283,-0.0201209,-0.0066400,0.0060250,0.0150138,0.0187869,0.0172700,0.0116556,0.0039427,-0.0036508,-0.0092508,-0.0117354,-0.0109093,-0.0074297,-0.0025314,0.0023571,0.0059977,0.0076306,0.0071058,0.0048428,0.0016496,-0.0015343,-0.0038964,-0.0049437,-0.0045878,-0.0031137,-0.0010555,0.0009764,0.0024645,0.0031061,0.0028618,0.0019272,0.0006479,-0.0005941,-0.0014860,-0.0018552,-0.0016926,-0.0011286,-0.0003757,0.0003411,0.0008451,0.0010459,0.0009469,0.0006274,0.0002080,-0.0001886,-0.0004683,-0.0005835,-0.0005350,-0.0003614,-0.0001231,0.0001157,0.0003008,0.0003960,0.0003871};
//#define TAPS 32
//const float coe[DATA_NUM]={-0.0001412,-0.0000522,0.0000529,0.0001468,0.0002046,0.0002095,0.0001574,0.0000593,-0.0000613,-0.0001733,-0.0002456,-0.0002554,-0.0001947,-0.0000744,0.0000777,0.0002221,0.0003178,0.0003331,0.0002558,0.0000983,-0.0001032,-0.0002962,-0.0004252,-0.0004468,-0.0003437,-0.0001322,0.0001389,0.0003987,0.0005721,0.0006007,0.0004617,0.0001773,-0.0001860,-0.0005330,-0.0007633,-0.0007998,-0.0006133,-0.0002350,0.0002460,0.0007030,0.0010043,0.0010497,0.0008029,0.0003069,-0.0003204,-0.0009135,-0.0013017,-0.0013573,-0.0010356,-0.0003950,0.0004114,0.0011701,0.0016636,0.0017309,0.0013180,0.0005016,-0.0005214,-0.0014803,-0.0021008,-0.0021819,-0.0016585,-0.0006302,0.0006540,0.0018540,0.0026274,0.0027251,0.0020688,0.0007851,-0.0008140,-0.0023051,-0.0032635,-0.0033821,-0.0025656,-0.0009730,0.0010082,0.0028537,0.0040387,0.0041843,0.0031736,0.0012036,-0.0012471,-0.0035306,-0.0049982,-0.0051806,-0.0039315,-0.0014920,0.0015473,0.0043851,0.0062153,0.0064509,0.0049031,0.0018640,-0.0019369,-0.0055013,-0.0078165,-0.0081349,-0.0062016,-0.0023656,0.0024671,0.0070353,0.0100404,0.0105004,0.0080481,0.0030881,-0.0032416,-0.0093107,-0.0133938,-0.0141312,-0.0109371,-0.0042424,0.0045077,0.0131246,0.0191715,0.0205805,0.0162458,0.0064456,-0.0070298,-0.0210998,-0.0319462,-0.0357948,-0.0297640,-0.0125951,0.0149101,0.0498570,0.0876627,0.1228307,0.1499476,0.1646999,0.1646999,0.1499476,0.1228307,0.0876627,0.0498570,0.0149101,-0.0125951,-0.0297640,-0.0357948,-0.0319462,-0.0210998,-0.0070298,0.0064456,0.0162458,0.0205805,0.0191715,0.0131246,0.0045077,-0.0042424,-0.0109371,-0.0141312,-0.0133938,-0.0093107,-0.0032416,0.0030881,0.0080481,0.0105004,0.0100404,0.0070353,0.0024671,-0.0023656,-0.0062016,-0.0081349,-0.0078165,-0.0055013,-0.0019369,0.0018640,0.0049031,0.0064509,0.0062153,0.0043851,0.0015473,-0.0014920,-0.0039315,-0.0051806,-0.0049982,-0.0035306,-0.0012471,0.0012036,0.0031736,0.0041843,0.0040387,0.0028537,0.0010082,-0.0009730,-0.0025656,-0.0033821,-0.0032635,-0.0023051,-0.0008140,0.0007851,0.0020688,0.0027251,0.0026274,0.0018540,0.0006540,-0.0006302,-0.0016585,-0.0021819,-0.0021008,-0.0014803,-0.0005214,0.0005016,0.0013180,0.0017309,0.0016636,0.0011701,0.0004114,-0.0003950,-0.0010356,-0.0013573,-0.0013017,-0.0009135,-0.0003204,0.0003069,0.0008029,0.0010497,0.0010043,0.0007030,0.0002460,-0.0002350,-0.0006133,-0.0007998,-0.0007633,-0.0005330,-0.0001860,0.0001773,0.0004617,0.0006007,0.0005721,0.0003987,0.0001389,-0.0001322,-0.0003437,-0.0004468,-0.0004252,-0.0002962,-0.0001032,0.0000983,0.0002558,0.0003331,0.0003178,0.0002221,0.0000777,-0.0000744,-0.0001947,-0.0002554,-0.0002456,-0.0001733,-0.0000613,0.0000593,0.0001574,0.0002095,0.0002046,0.0001468,0.0000529,-0.0000522,-0.0001412};

typedef ap_int<16> sample_16;
typedef ap_int<256> sample_256;
typedef ap_int<112> sample_112;
typedef ap_int<16*D> sample;

typedef ap_axis<112,0,0,0> axis112_t;
typedef ap_axis<128,0,0,0> axis128_t;
typedef ap_axis<256,0,0,0> axis256_t;
typedef ap_axis<512,0,0,0> axis512_t;
typedef ap_axis<1024,0,0,0> axis1024_t;
typedef ap_axis<96,0,0,0> axis96_t;
typedef ap_axis<10,0,0,0> axis10_t;
typedef ap_axis<16*D,0,0,0> axis_t;

union float_to_uint32 {
    float f;
    ap_uint<32> u;
};


void opfb_snake_convolution(hls::stream<axis_t> &I,
                         hls::stream<axis256_t> &output);
